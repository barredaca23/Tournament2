

import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { UserProvider } from '../context/usercontext';
 // Asegúrate de que la ruta sea correcta

// Definición de las fuentes locales
const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// Metadatos globales
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// RootLayout
export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/* Wrapping children with the UserProvider */}
        <UserProvider>{children}</UserProvider>
      </body>
    </html>
  );
}

function ClientProvider({ children }: { children: React.ReactNode }) {
  "use client"; // Esto permite que UserProvider use hooks como useState
  return <UserProvider>{children}</UserProvider>;
}


